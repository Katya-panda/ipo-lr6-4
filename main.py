# Функция для поиска строк в файле, содержащих искомую подстроку
def search_in_file(file_name, search_string):
    found_lines = []  # Список для хранения найденных строк
    with open(file_name, 'r', encoding='utf-8') as file:  # Открываем файл для чтения
        for line in file:  # Проходим по каждой строке в файле
            if search_string in line:  # Проверяем, содержится ли искомая подстрока в строке
                found_lines.append(line.strip())  # Если да, добавляем строку в список (удаляем пробелы в начале и конце)
    return found_lines  # Возвращаем список найденных строк

# Запрашиваем у пользователя строку для поиска
search_string = input("Введите строку для поиска: ")

# Указываем имя файла, в котором будем искать
file_name = 'text.txt'

# Вызываем функцию для поиска строк, передавая имя файла и искомую строку
found_lines = search_in_file(file_name, search_string)

# Определяем количество найденных строк
count_found = len(found_lines)  # Считаем количество найденных строк

# Выводим количество найденных строк
print(f"Найдено строк: {count_found}")

# Проверяем, существуют ли найденные строки
if count_found > 0:
    # Сортируем найденные строки по длине
    sorted_lines = sorted(found_lines, key=len)  # Сортировка по длине строк

    # Выводим отсортированные строки
    print("Найденные строки (от самой короткой к самой длинной):")
    for line in sorted_lines:  # Проходим по отсортированным строкам
        print(line)  # Печатаем каждую строку
else:
    print("Совпадений не найдено.")  # Если строки не найдены, сообщаем об этом
